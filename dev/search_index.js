var documenterSearchIndex = {"docs":
[{"location":"api/#ElectroPhysiology-Methods","page":"API","title":"ElectroPhysiology Methods","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"using ElectroPhysiology","category":"page"},{"location":"api/","page":"API","title":"API","text":"These methods become available after this command is run.","category":"page"},{"location":"api/#Stimulus-Protocols","page":"API","title":"Stimulus Protocols","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"StimulusProtocol{T, S}","category":"page"},{"location":"api/#ElectroPhysiology.StimulusProtocol","page":"API","title":"ElectroPhysiology.StimulusProtocol","text":"StimulusProtocol{T, S}\n\nA mutable struct representing a stimulus protocol for physiological data.\n\nFields\n\ntype: A Stimulus object describing the type of stimulus applied during the experiment.\nchannelName: A Union{String, Int64} representing the name or number of the channel where the stimulus is applied.\ntimestamps: A Vector{Tuple{T, T}} storing the start and end timestamps of the stimulus events.\n\nConstructors\n\nStimulusProtocol(): Creates a default StimulusProtocol object with Flash() stimulus, \"Nothing\" channel, and a single (0.0, 0.0) timestamp.\nStimulusProtocol(stimulus_channel::String): Creates a StimulusProtocol object with Flash() stimulus, the provided stimulus_channel, and a single (0.0, 0.0) timestamp.\nStimulusProtocol(swp::Int64): Creates a StimulusProtocol object with Flash() stimulus, \"Nothing\" channel, and swp number of (0.0, 0.0) timestamps.\nStimulusProtocol(stimulus_channel::String, swp::Int64): Creates a StimulusProtocol object with Flash() stimulus, the provided stimulus_channel, and swp number of (0.0, 0.0) timestamps.\n\n\n\n\n\n","category":"type"},{"location":"api/","page":"API","title":"API","text":"extractStimulus","category":"page"},{"location":"api/#ElectroPhysiology.extractStimulus","page":"API","title":"ElectroPhysiology.extractStimulus","text":"extractStimulus(abfInfo::Dict{String, Any}; stimulus_name::String=\"IN 7\", stimulus_threshold::Float64=2.5)\nextractStimulus(abf_path::String; kwargs...)\n\nExtract the stimulus information from the given abfInfo dictionary and returns a StimulusProtocol object containing stimulus timestamps.\n\nArguments\n\nabfInfo: A dictionary containing information about the physiological data.\nstimulus_name: (Optional) The name of the stimulus channel. Default is \"IN 7\".\nstimulus_threshold: (Optional) The threshold for detecting stimulus events in the waveform. Default is 2.5.\n\nReturns\n\nA StimulusProtocol object containing the stimulus timestamps for each trial.\n\nExamples\n\nabfInfo = loadABF(\"path/to/abf/file\")\nstimuli = extractStimulus(abfInfo)\n\nstimuli = extractStimulus(\"path/to/abf/file\")\n\n\n\n\n\n","category":"function"},{"location":"api/#Experiment-readers","page":"API","title":"Experiment readers","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"readABF(::Type{T}, abf_data::Union{String,Vector{UInt8}};\n    trials::Union{Int64,Vector{Int64}}=-1,\n    channels::Union{Int64, String, Vector{String}}=[\"Vm_prime\", \"Vm_prime4\"],\n    average_trials::Bool=false,\n    stimulus_name::Union{String, Vector{String}, Nothing}=\"IN 7\",  #One of the best places to store digital stimuli\n    stimulus_threshold::T=2.5, #This is the normal voltage rating on digital stimuli\n    warn_bad_channel=false, #This will warn if a channel is improper\n    flatten_episodic::Bool=false, #If the stimulation is episodic and you want it to be continuous\n    time_unit=:s, #The time unit is s, change to ms\n) where {T<:Real}","category":"page"},{"location":"api/#ElectroPhysiology.readABF-Union{Tuple{T}, Tuple{Type{T}, Union{String, Vector{UInt8}}}} where T<:Real","page":"API","title":"ElectroPhysiology.readABF","text":"readABF(::Type{T}, abf_data::Union{String,Vector{UInt8}};\n    trials::Union{Int64,Vector{Int64}}=-1,\n    channels::Union{Int64, Vector{String}}=[\"Vm_prime\", \"Vm_prime4\"],\n    average_trials::Bool=false,\n    stimulus_name::Union{String, Vector{String}, Nothing}=\"IN 7\",\n    stimulus_threshold::T=2.5,\n    warn_bad_channel=false,\n    flatten_episodic::Bool=false,\n    time_unit=:s,\n) where {T<:Real}\n\nRead an Axon Binary File (ABF) and return an Experiment object. The function extracts data for the specified trials and channels, and optionally averages trials or flattens episodic data.\n\nArguments\n\nabf_data: A String representing the ABF file path or a Vector{UInt8} containing the ABF file content.\ntrials: An Int64 or a Vector{Int64} specifying the trials to extract. Default is -1 (all trials).\nchannels: An Int64 or a Vector{String} specifying the channels to extract. Default is [\"Vmprime\", \"Vmprime4\"].\naverage_trials: A Bool specifying whether to average the trials. Default is false.\nstimulus_name: A String, Vector{String}, or Nothing specifying the stimulus name(s). Default is \"IN 7\".\nstimulus_threshold: A threshold value of type T for the stimulus. Default is 2.5.\nwarn_bad_channel: A Bool specifying whether to warn if a channel is improper. Default is false.\nflatten_episodic: A Bool specifying whether to flatten episodic stimulation to be continuous. Default is false.\ntime_unit: A Symbol specifying the time unit. Default is :s (seconds).\n\nReturns\n\nAn Experiment object containing the extracted data, along with metadata.\n\nExample\n\nexp = readABF(Float32, \"path/to/abf_file.abf\")\n\n\n\n\n\n","category":"method"},{"location":"api/#PhysiologyAnalysis-methods","page":"API","title":"PhysiologyAnalysis methods","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"calculate_threshold(x::Array{T, N}; Z = 4.0, dims = -1) where {T <: Real, N}","category":"page"},{"location":"api/#PhysiologyAnalysis.calculate_threshold-Union{Tuple{Array{T, N}}, Tuple{N}, Tuple{T}} where {T<:Real, N}","page":"API","title":"PhysiologyAnalysis.calculate_threshold","text":"calculate_threshold(vm_arr::AbstractArray; Z = 4, dims = -1)\n\nFinds the threshold of a trace by calculating the average and then adding the 4x the standard deviation.  If using a differential solution, make sure dt is set, otherwise the standard deviation will be unevenly sampled\n\n\n\n\n\n","category":"method"},{"location":"api/#PhysiologyPlotting-methods","page":"API","title":"PhysiologyPlotting methods","text":"","category":"section"},{"location":"api/","page":"API","title":"API","text":"To load PyPlot as a backend, export it with ","category":"page"},{"location":"api/","page":"API","title":"API","text":"using PhysiologyPlotting\nusing PyPlot","category":"page"},{"location":"api/","page":"API","title":"API","text":"plot_experiment(axis::T, exp::Experiment;\n    channels=1, sweeps = :all, \n    yaxes=true, xaxes=true, #Change this, this is confusing\n    xlims = nothing, ylims = nothing,\n    color = :black, cvals = nothing, clims = (0.0, 1.0), #still want to figure out how this wil work\n    ylabel = nothing, xlabel = nothing,\n    linewidth = 1.0, \n    kwargs...\n) where T","category":"page"},{"location":"methods/#Methods","page":"Methods","title":"Methods","text":"","category":"section"},{"location":"methods/#ElectroPhysiology-Methods","page":"Methods","title":"ElectroPhysiology Methods","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"using ElectroPhysiology","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"These methods become available after this command is run.","category":"page"},{"location":"methods/#Stimulus-Protocols","page":"Methods","title":"Stimulus Protocols","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"StimulusProtocol{T, S}","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"extractStimulus","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"setIntensity","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"getIntensity","category":"page"},{"location":"methods/#Structs","page":"Methods","title":"Structs","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"Experiment{T}","category":"page"},{"location":"methods/#ElectroPhysiology.Experiment","page":"Methods","title":"ElectroPhysiology.Experiment","text":"Experiment{T}\n\nA mutable struct representing a physiological experiment.\n\nFields\n\nHeaderDict: A dictionary containing header information for the experiment.\ndt: A Real value representing the time step between data points.\nt: A vector containing the time points of the experiment.\ndata_array: A 3-dimensional array containing the experimental data.\nchNames: A vector of strings representing the names of the channels.\nchUnits: A vector of strings representing the units of the channels.\nchTelegraph: A vector of Real values representing the telegraph values of the channels.\nstimulus_protocol: A StimulusProtocol{T} object containing the stimulus protocol information.\n\nConstructors\n\nExperiment(data_array::AbstractArray; data_idx = 2): Create an Experiment object from an input data array with an optional data index.\nExperiment(time::Vector, data_array::Array{T, 3}) where T <: Real: Create an Experiment object from an input time vector and data array.\n\n\n\n\n\n","category":"type"},{"location":"methods/#Functions","page":"Methods","title":"Functions","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"pad(trace::Experiment{T}, n_add::Int64; position::Symbol=:post, val::T=0.0) where {T <: Real}","category":"page"},{"location":"methods/#ElectroPhysiology.pad-Union{Tuple{T}, Tuple{Experiment{T}, Int64}} where T<:Real","page":"Methods","title":"ElectroPhysiology.pad","text":"pad(trace::Experiment{T}, n_add::Int64; position::Symbol=:post, val::T=0.0) where {T <: Real}\npad!(trace::Experiment{T}, n_add::Int64; position::Symbol=:post, val::T=0.0) where {T <: Real}\n\nPad the data in a given Experiment object by adding elements with a specified value val either before or after the existing data.  This function returns a new Experiment object with the padded data. pad! is the inplace version, while pad creates a new experiment\n\nArguments\n\ntrace: An Experiment{T} object containing the experimental data.\nn_add: The number of elements to add.\nposition: (Optional) A symbol specifying where to add the elements. Can be :pre (before) or :post (after). Default is :post.\nval: (Optional) The value to use for padding. Default is 0.0.\n\nExample\n\nexp = Experiment(data_array)\npadded_exp = pad(exp, 100, position=:pre, val=0.0)\n\n\n\n\n\n","category":"method"},{"location":"methods/#PhysiologyAnalysis-Methods","page":"Methods","title":"PhysiologyAnalysis Methods","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"These methods only become available after ","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"using PhysiologyAnalysis","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"is run.","category":"page"},{"location":"methods/#PhysiologyPlotting-Methods","page":"Methods","title":"PhysiologyPlotting Methods","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"These methods only become available after ","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"using PhysiologyPlotting","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"is run.","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"To load PyPlot as a backend, export it with ","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"using PhysiologyPlotting\nusing PyPlot","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"To load GLMakie or CairoMakie as a backend, export it with ","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"using PhysiologyPlotting, \nusing GLMakie","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"or ","category":"page"},{"location":"methods/","page":"Methods","title":"Methods","text":"using PhysiologyPlotting, \nusing CairoMakie","category":"page"},{"location":"installation/#Installation","page":"Installation","title":"Installation","text":"","category":"section"},{"location":"installation/#Making-an-analysis-environment-(OPTIONAL)","page":"Installation","title":"Making an analysis environment (OPTIONAL)","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"While it is not necessary to create a seperate environment, this helps to isolate packages and prevent cross-contamination of packages. ","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"In order to create a new environment use this code: ","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"using Pkg; Pkg.activate(\"Analysis\")","category":"page"},{"location":"installation/","page":"Installation","title":"Installation","text":"Each time you run julia you will need to run this line first. ","category":"page"},{"location":"installation/#Installing-ElectroPhysiology.jl","page":"Installation","title":"Installing ElectroPhysiology.jl","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"using Pkg; Pkg.add(\"ElectroPhysiology\")","category":"page"},{"location":"installation/#Installing-the-PhysiologyAnalysis.jl-toolkit","page":"Installation","title":"Installing the PhysiologyAnalysis.jl toolkit","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"using Pkg; Pkg.add(\"PhysiologyAnalysis\")","category":"page"},{"location":"installation/#Installing-the-PhysiologyPlotting.jl-toolkit","page":"Installation","title":"Installing the PhysiologyPlotting.jl toolkit","text":"","category":"section"},{"location":"installation/","page":"Installation","title":"Installation","text":"using Pkg; Pkg.add(\"PhysiologyPlotting\")","category":"page"},{"location":"roadmap/#Roadmap","page":"Roadmap","title":"Roadmap","text":"","category":"section"},{"location":"roadmap/","page":"Roadmap","title":"Roadmap","text":"Version 1.0: Can open, plot, and analyze datafiles from .ABF files. ","category":"page"},{"location":"roadmap/","page":"Roadmap","title":"Roadmap","text":"Notebooks are included to help analyze some electroretinography data. To install notebooks use this link: https://github.com/mattar13/PhysiologyInterface.jl","category":"page"},{"location":"roadmap/#ElectroPhysiology","page":"Roadmap","title":"ElectroPhysiology","text":"","category":"section"},{"location":"roadmap/#Physio","page":"Roadmap","title":"Physio","text":"","category":"section"},{"location":"#ElectroPhysiology.jl-Introduction","page":"Introduction","title":"ElectroPhysiology.jl Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Electrophysiology is defined the study of the electrical nature of cells in an organism. Much of the time it deals with muscular or neural physiology, however other cells have conductive behavior as well. As the field of neuroscience develops, it will draw more heavily on available computational systems. This package aims to take ","category":"page"},{"location":"#Package-composition","page":"Introduction","title":"Package composition","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"This module is composed of several different modules. You can load some or all of the modules based on what you need. ","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"ElectroPhysiology.jl provides the basic reading and access to electrophysiology data\nElectroPhysiology Methods\nPhysiologyAnalysis.jl provides some analysis tools and plotting tools for analysis\nPhysiologyAnalysis Methods\nPhysiologyPlotting.jl provides plotting and visualization tools. \nPhysiologyPlotting Methods","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"In general, if exporting PhysiologyAnalysis.jl or PhysiologyModeling.jl, ElectroPhysiology.jl doesn't need to be exported, and many of the things exported with ElectroPhysiology.jl will be left \"under the hood\". However if some of the tools included in ElectroPhysiology.jl are needed (see ElectroPhysiology tools), then it may be best to import both. ","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"If you would like tutorials, look into the tutorial package here with help on how to use the software","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"tutorial/#ElectroPhysiology.jl-Tutorial","page":"Tutorial","title":"ElectroPhysiology.jl Tutorial","text":"","category":"section"},{"location":"tutorial/#A-tutorial-is-provided-in-the-github-repo","page":"Tutorial","title":"A tutorial is provided in the github repo","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"https://github.com/mattar13/PhysiologyInterface.jl","category":"page"},{"location":"tutorial/#The-experiment-is-the-universal-experiment-container","page":"Tutorial","title":"The experiment is the universal experiment container","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"At the base of the ElectroPhysiology.jl package (PhysigologyAnalysis.jl, and PhysiologyModeling.jl). Is the Experiment object: Experiment. This object contains all relevant information about the data. The easiest way to get your data into an Experiment is to extract it. ","category":"page"},{"location":"tutorial/#Opening-Axon-Binary-Format-files-(.abf)","page":"Tutorial","title":"Opening Axon Binary Format files (.abf)","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Currently, this package only opens this can only be done through ","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"test_file = \"test\\\\to_filter.abf\"\ndata = readABF(test_file)\nprintln(size(data))\n","category":"page"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"readABF(::Type{T}, abf_data::Union{String,Vector{UInt8}};\n    trials::Union{Int64,Vector{Int64}}=-1,\n    channels::Union{Int64, String, Vector{String}}=[\"Vm_prime\", \"Vm_prime4\"],\n    average_trials::Bool=false,\n    stimulus_name::Union{String, Vector{String}, Nothing}=\"IN 7\",  #One of the best places to store digital stimuli\n    stimulus_threshold::T=2.5, #This is the normal voltage rating on digital stimuli\n    warn_bad_channel=false, #This will warn if a channel is improper\n    flatten_episodic::Bool=false, #If the stimulation is episodic and you want it to be continuous\n    time_unit=:s, #The time unit is s, change to ms\n) where {T<:Real}","category":"page"},{"location":"tutorial/#Modification-of-Experiment-files","page":"Tutorial","title":"Modification of Experiment files","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"Once the data is open. We can do several things to modify it. ","category":"page"},{"location":"tutorial/#Extracting-data-and-metadata-from-a-system-of-file-names","page":"Tutorial","title":"Extracting data and metadata from a system of file names","text":"","category":"section"},{"location":"tutorial/","page":"Tutorial","title":"Tutorial","text":"PhysiologyAnalysis.jl has some methods that make the extraction of file information easier. These are really just convienance functions. Because some experiments are really different, these may or may not be helpful. ","category":"page"},{"location":"tutorial/#Making-a-dataframe-that-includes-all-trials-in-a-experiment","page":"Tutorial","title":"Making a dataframe that includes all trials in a experiment","text":"","category":"section"}]
}
